name: CD
on:
  push:
    branches: [ main ]

    
env:
  IMAGE_CLIENT: ghcr.io/${{ github.repository }}-client
  IMAGE_SERVER: ghcr.io/${{ github.repository }}-server

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - uses: docker/setup-buildx-action@v3

      - name: Build & push client
        uses: docker/build-push-action@v6
        with:
          context: ./client
          file: ./client/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_CLIENT }}:latest
            ${{ env.IMAGE_CLIENT }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build & push server
        uses: docker/build-push-action@v6
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_SERVER }}:latest
            ${{ env.IMAGE_SERVER }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v4

      - name: Debug workspace
        run: |
          pwd
          ls -la
          ls -la deploy || true

      - name: Copy deploy files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "deploy/**"
          target: "~/dtwin/deploy"
          overwrite: true

      - name: Remote deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            cd ~/dtwin/deploy
            echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker compose -f compose.prod.yml pull
            docker compose -f compose.prod.yml up -d
            docker image prune -f