name: CD
on:
  push:
    branches: [ main ]

env:
  IMAGE_CLIENT: ghcr.io/${{ github.repository }}-client
  IMAGE_SERVER: ghcr.io/${{ github.repository }}-server

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - uses: docker/setup-buildx-action@v3

      - name: Build & push client
        uses: docker/build-push-action@v6
        with:
          context: ./client
          file: ./client/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_CLIENT }}:latest
            ${{ env.IMAGE_CLIENT }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build & push server
        uses: docker/build-push-action@v6
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_SERVER }}:latest
            ${{ env.IMAGE_SERVER }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true   # safe even if you don't use submodules

    - name: Debug workspace
      run: |
        echo "PWD: $(pwd)"
        echo "Workspace: $GITHUB_WORKSPACE"
        echo "--- level 1 ---"
        ls -la
        echo "--- find compose/nginx anywhere (3 levels) ---"
        find . -maxdepth 3 -type f \( -iname "compose.prod.yml" -o -iname "nginx.conf" \) -print || true
        echo "--- tree deploy (if exists) ---"
        if [ -d deploy ]; then ls -la deploy; fi

    - name: Verify deploy files exist (fail fast)
      run: |
        test -f deploy/compose.prod.yml
        test -f deploy/nginx.conf
        echo "deploy files found"
      working-directory: .
      
    - name: Check for deployment files
      run: |
        test -f deploy/compose.prod.yaml # Corrected from .yml to .yaml
        test -f deploy/nginx.conf
        echo "Deployment files found!"

    - name: Copy deploy files to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        source: |
          deploy/compose.prod.yml
          deploy/nginx.conf
        target: ~/dtwin/deploy
        overwrite: true
        debug: true

    - name: Remote deploy via SSH
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          set -e
          cd ~/dtwin/deploy
          # If your compose has placeholders, patch them:
          sed -i 's#ghcr.io/<OWNER>/<REPO>-client:latest#ghcr.io/${{ github.repository }}-client:latest#g' compose.prod.yml || true
          sed -i 's#ghcr.io/<OWNER>/<REPO>-server:latest#ghcr.io/${{ github.repository }}-server:latest#g' compose.prod.yml || true

          echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker compose -f compose.prod.yml pull
          docker compose -f compose.prod.yml up -d
          docker image prune -f

